{
    "data" : [
        "default.naming=create_naming()",
        "> ",
        "default.naming(x)",
        "[1] \"\"\n\nRestarting R session...\n\n",
        "> ",
        "library(exe)",
        "> ",
        "default.naming(x)",
        "[1] \"\"\n",
        "> ",
        "default.naming(x)",
        "Error in default.naming(x) : object 'x' not found\n",
        "> ",
        "x=data.frame(.is(Site,\"Paris\"),.is(Year,2004),.in(Season,\"summer\"),.is(Person,list(NULL)))",
        "> ",
        "naming.folder=create_naming(\"Site\",\"Season\")",
        "> ",
        "naming.folder(x)",
        "[1] \"Paris/summer\"\n",
        "> ",
        "naming.underscore=create_naming(\"Site\",\"Season\",sep.global=\"_\")",
        "> ",
        "naming.underscore(x)",
        "[1] \"Paris_summer\"\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "default.naming(x)",
        "[1] \"Paris/2004/summer\"\n",
        "> ",
        "x",
        "       Site     Year       Season Person\n1 ==, Paris ==, 2004 %in%, summer   NULL\n",
        "> ",
        "x=data.frame(.is(Site,\"Paris\"),.is(Year,2004),.in(Season,list(\"summer\",\"winter\")),.is(Person,list(NULL)))",
        "> ",
        "x",
        "       Site     Year       Season Person\n1 ==, Paris ==, 2004 %in%, summer   NULL\n2 ==, Paris ==, 2004 %in%, winter   NULL\n",
        "> ",
        "x=data.frame(.is(Site,\"Paris\"),.is(Year,2004),.in(Season,list(c(\"summer\",\"winter\"))),.is(Person,list(NULL)))",
        "> ",
        "x",
        "       Site     Year               Season Person\n1 ==, Paris ==, 2004 %in%, summer, winter   NULL\n",
        "> ",
        "naming.folder=create_naming(\"Site\",\"Season\")",
        "> ",
        "naming.folder(x)",
        "[1] \"Paris/summer-winter\"\n",
        "> ",
        "naming.underscore=create_naming(\"Site\",\"Season\",sep.global=\"_\")",
        "> ",
        "naming.underscore(x)",
        "[1] \"Paris_summer-winter\"\n",
        "> ",
        "default.naming(x)",
        "[1] \"Paris/2004/summer-winter\"\n",
        "> ",
        "",
        "> ",
        "subset2(mtcars,cyl=list(`==`,4))",
        "Error: could not find function \"subset2\"\n",
        "\nRestarting R session...\n\n",
        "> ",
        "library(exe)",
        "> ",
        "subset2(mtcars,cyl=list(`==`,4))",
        "                mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nDatsun 710     22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nMerc 240D      24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nMerc 230       22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nFiat 128       32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic    30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nToyota Corona  21.5   4 120.1  97 3.70 2.465",
        " 20.01  1  0    3    1\nFiat X1-9      27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2  26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa   30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\nVolvo 142E     21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\n",
        "> ",
        "subset2(mtcars,mpg=list(`<`,30),cyl=list(`%in%`,c(4,6)))",
        "                mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4      21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag  21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710     22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nValiant        18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nMerc 240D      24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nMerc 230       22.8   4 140.8  95 3.92 3.150",
        " 22.90  1  0    4    2\nMerc 280       19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C      17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nToyota Corona  21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1\nFiat X1-9      27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2  26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nFerrari Dino   19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nVolvo 142E     21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\n",
        "> ",
        "iri",
        "Error: object 'iri' not found\n",
        "> ",
        "iris",
        "    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1            5.1         3.5          1.4         0.2     setosa\n2            4.9         3.0          1.4         0.2     setosa\n3            4.7         3.2          1.3         0.2     setosa\n4            4.6         3.1          1.5         0.2     setosa\n5            5.0         3.6          1.4         0.2     setosa\n6            5.4         3.9          1.7         0.4     setosa\n7            4.6         3.4          1.4         0.3     setosa",
        "\n8            5.0         3.4          1.5         0.2     setosa\n9            4.4         2.9          1.4         0.2     setosa\n10           4.9         3.1          1.5         0.1     setosa\n11           5.4         3.7          1.5         0.2     setosa\n12           4.8         3.4          1.6         0.2     setosa\n13           4.8         3.0          1.4         0.1     setosa\n14           4.3         3.0          1.1         0.1     setosa\n15           5.8         4.0          1.2         0.2     setosa",
        "\n16           5.7         4.4          1.5         0.4     setosa\n17           5.4         3.9          1.3         0.4     setosa\n18           5.1         3.5          1.4         0.3     setosa\n19           5.7         3.8          1.7         0.3     setosa\n20           5.1         3.8          1.5         0.3     setosa\n21           5.4         3.4          1.7         0.2     setosa\n22           5.1         3.7          1.5         0.4     setosa\n23           4.6         3.6          1.0         0.2     setosa",
        "\n24           5.1         3.3          1.7         0.5     setosa\n25           4.8         3.4          1.9         0.2     setosa\n26           5.0         3.0          1.6         0.2     setosa\n27           5.0         3.4          1.6         0.4     setosa\n28           5.2         3.5          1.5         0.2     setosa\n29           5.2         3.4          1.4         0.2     setosa\n30           4.7         3.2          1.6         0.2     setosa\n31           4.8         3.1          1.6         0.2     setosa",
        "\n32           5.4         3.4          1.5         0.4     setosa\n33           5.2         4.1          1.5         0.1     setosa\n34           5.5         4.2          1.4         0.2     setosa\n35           4.9         3.1          1.5         0.2     setosa\n36           5.0         3.2          1.2         0.2     setosa\n37           5.5         3.5          1.3         0.2     setosa\n38           4.9         3.6          1.4         0.1     setosa\n39           4.4         3.0          1.3         0.2     setosa",
        "\n40           5.1         3.4          1.5         0.2     setosa\n41           5.0         3.5          1.3         0.3     setosa\n42           4.5         2.3          1.3         0.3     setosa\n43           4.4         3.2          1.3         0.2     setosa\n44           5.0         3.5          1.6         0.6     setosa\n45           5.1         3.8          1.9         0.4     setosa\n46           4.8         3.0          1.4         0.3     setosa\n47           5.1         3.8          1.6         0.2     setosa",
        "\n48           4.6         3.2          1.4         0.2     setosa\n49           5.3         3.7          1.5         0.2     setosa\n50           5.0         3.3          1.4         0.2     setosa\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor",
        "\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n58           4.9         2.4          3.3         1.0 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n61           5.0         2.0          3.5         1.0 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor",
        "\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor",
        "\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor",
        "\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor",
        "\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n94           5.0         2.3          3.3         1.0 versicolor\n95           5.6         2.7          4.2         1.3 versicolor",
        "\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n101          6.3         3.3          6.0         2.5  virginica\n102          5.8         2.7          5.1         1.9  virginica\n103          7.1         3.0          5.9         2.1  virginica",
        "\n104          6.3         2.9          5.6         1.8  virginica\n105          6.5         3.0          5.8         2.2  virginica\n106          7.6         3.0          6.6         2.1  virginica\n107          4.9         2.5          4.5         1.7  virginica\n108          7.3         2.9          6.3         1.8  virginica\n109          6.7         2.5          5.8         1.8  virginica\n110          7.2         3.6          6.1         2.5  virginica\n111          6.5         3.2          5.1         2.0  virginica",
        "\n112          6.4         2.7          5.3         1.9  virginica\n113          6.8         3.0          5.5         2.1  virginica\n114          5.7         2.5          5.0         2.0  virginica\n115          5.8         2.8          5.1         2.4  virginica\n116          6.4         3.2          5.3         2.3  virginica\n117          6.5         3.0          5.5         1.8  virginica\n118          7.7         3.8          6.7         2.2  virginica\n119          7.7         2.6          6.9         2.3  virginica",
        "\n120          6.0         2.2          5.0         1.5  virginica\n121          6.9         3.2          5.7         2.3  virginica\n122          5.6         2.8          4.9         2.0  virginica\n123          7.7         2.8          6.7         2.0  virginica\n124          6.3         2.7          4.9         1.8  virginica\n125          6.7         3.3          5.7         2.1  virginica\n126          7.2         3.2          6.0         1.8  virginica\n127          6.2         2.8          4.8         1.8  virginica",
        "\n128          6.1         3.0          4.9         1.8  virginica\n129          6.4         2.8          5.6         2.1  virginica\n130          7.2         3.0          5.8         1.6  virginica\n131          7.4         2.8          6.1         1.9  virginica\n132          7.9         3.8          6.4         2.0  virginica\n133          6.4         2.8          5.6         2.2  virginica\n134          6.3         2.8          5.1         1.5  virginica\n135          6.1         2.6          5.6         1.4  virginica",
        "\n136          7.7         3.0          6.1         2.3  virginica\n137          6.3         3.4          5.6         2.4  virginica\n138          6.4         3.1          5.5         1.8  virginica\n139          6.0         3.0          4.8         1.8  virginica\n140          6.9         3.1          5.4         2.1  virginica\n141          6.7         3.1          5.6         2.4  virginica\n142          6.9         3.1          5.1         2.3  virginica\n143          5.8         2.7          5.1         1.9  virginica",
        "\n144          6.8         3.2          5.9         2.3  virginica\n145          6.7         3.3          5.7         2.5  virginica\n146          6.7         3.0          5.2         2.3  virginica\n147          6.3         2.5          5.0         1.9  virginica\n148          6.5         3.0          5.2         2.0  virginica\n149          6.2         3.4          5.4         2.3  virginica\n150          5.9         3.0          5.1         1.8  virginica\n",
        "> ",
        "within(Petal.Width,c(0.2,0.3))",
        "Error in within(Petal.Width, c(0.2, 0.3)) : \n  object 'Petal.Width' not found\n",
        "> ",
        ".within(Petal.Width,c(0.2,0.3))",
        "    Petal.Width\n1 %within%, 0.2\n2 %within%, 0.3\n",
        "> ",
        ".within(Petal.Width,list(c(0.2,0.3)))",
        "         Petal.Width\n1 %within%, 0.2, 0.3\n",
        "> ",
        ".is(as.factor(Species),1)",
        "  as.factor(Species)\n1              ==, 1\n",
        "> ",
        "subset2(iris,.within(Petal.Width,list(c(0.2,0.3))),.is(as.factor(Species),1))",
        "    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1            5.1         3.5          1.4         0.2     setosa\n2            4.9         3.0          1.4         0.2     setosa\n3            4.7         3.2          1.3         0.2     setosa\n4            4.6         3.1          1.5         0.2     setosa\n5            5.0         3.6          1.4         0.2     setosa\n6            5.4         3.9          1.7         0.4     setosa\n7            4.6         3.4          1.4         0.3     setosa",
        "\n8            5.0         3.4          1.5         0.2     setosa\n9            4.4         2.9          1.4         0.2     setosa\n10           4.9         3.1          1.5         0.1     setosa\n11           5.4         3.7          1.5         0.2     setosa\n12           4.8         3.4          1.6         0.2     setosa\n13           4.8         3.0          1.4         0.1     setosa\n14           4.3         3.0          1.1         0.1     setosa\n15           5.8         4.0          1.2         0.2     setosa",
        "\n16           5.7         4.4          1.5         0.4     setosa\n17           5.4         3.9          1.3         0.4     setosa\n18           5.1         3.5          1.4         0.3     setosa\n19           5.7         3.8          1.7         0.3     setosa\n20           5.1         3.8          1.5         0.3     setosa\n21           5.4         3.4          1.7         0.2     setosa\n22           5.1         3.7          1.5         0.4     setosa\n23           4.6         3.6          1.0         0.2     setosa",
        "\n24           5.1         3.3          1.7         0.5     setosa\n25           4.8         3.4          1.9         0.2     setosa\n26           5.0         3.0          1.6         0.2     setosa\n27           5.0         3.4          1.6         0.4     setosa\n28           5.2         3.5          1.5         0.2     setosa\n29           5.2         3.4          1.4         0.2     setosa\n30           4.7         3.2          1.6         0.2     setosa\n31           4.8         3.1          1.6         0.2     setosa",
        "\n32           5.4         3.4          1.5         0.4     setosa\n33           5.2         4.1          1.5         0.1     setosa\n34           5.5         4.2          1.4         0.2     setosa\n35           4.9         3.1          1.5         0.2     setosa\n36           5.0         3.2          1.2         0.2     setosa\n37           5.5         3.5          1.3         0.2     setosa\n38           4.9         3.6          1.4         0.1     setosa\n39           4.4         3.0          1.3         0.2     setosa",
        "\n40           5.1         3.4          1.5         0.2     setosa\n41           5.0         3.5          1.3         0.3     setosa\n42           4.5         2.3          1.3         0.3     setosa\n43           4.4         3.2          1.3         0.2     setosa\n44           5.0         3.5          1.6         0.6     setosa\n45           5.1         3.8          1.9         0.4     setosa\n46           4.8         3.0          1.4         0.3     setosa\n47           5.1         3.8          1.6         0.2     setosa",
        "\n48           4.6         3.2          1.4         0.2     setosa\n49           5.3         3.7          1.5         0.2     setosa\n50           5.0         3.3          1.4         0.2     setosa\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor",
        "\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n58           4.9         2.4          3.3         1.0 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n61           5.0         2.0          3.5         1.0 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor",
        "\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor",
        "\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor",
        "\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor",
        "\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n94           5.0         2.3          3.3         1.0 versicolor\n95           5.6         2.7          4.2         1.3 versicolor",
        "\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n101          6.3         3.3          6.0         2.5  virginica\n102          5.8         2.7          5.1         1.9  virginica\n103          7.1         3.0          5.9         2.1  virginica",
        "\n104          6.3         2.9          5.6         1.8  virginica\n105          6.5         3.0          5.8         2.2  virginica\n106          7.6         3.0          6.6         2.1  virginica\n107          4.9         2.5          4.5         1.7  virginica\n108          7.3         2.9          6.3         1.8  virginica\n109          6.7         2.5          5.8         1.8  virginica\n110          7.2         3.6          6.1         2.5  virginica\n111          6.5         3.2          5.1         2.0  virginica",
        "\n112          6.4         2.7          5.3         1.9  virginica\n113          6.8         3.0          5.5         2.1  virginica\n114          5.7         2.5          5.0         2.0  virginica\n115          5.8         2.8          5.1         2.4  virginica\n116          6.4         3.2          5.3         2.3  virginica\n117          6.5         3.0          5.5         1.8  virginica\n118          7.7         3.8          6.7         2.2  virginica\n119          7.7         2.6          6.9         2.3  virginica",
        "\n120          6.0         2.2          5.0         1.5  virginica\n121          6.9         3.2          5.7         2.3  virginica\n122          5.6         2.8          4.9         2.0  virginica\n123          7.7         2.8          6.7         2.0  virginica\n124          6.3         2.7          4.9         1.8  virginica\n125          6.7         3.3          5.7         2.1  virginica\n126          7.2         3.2          6.0         1.8  virginica\n127          6.2         2.8          4.8         1.8  virginica",
        "\n128          6.1         3.0          4.9         1.8  virginica\n129          6.4         2.8          5.6         2.1  virginica\n130          7.2         3.0          5.8         1.6  virginica\n131          7.4         2.8          6.1         1.9  virginica\n132          7.9         3.8          6.4         2.0  virginica\n133          6.4         2.8          5.6         2.2  virginica\n134          6.3         2.8          5.1         1.5  virginica\n135          6.1         2.6          5.6         1.4  virginica",
        "\n136          7.7         3.0          6.1         2.3  virginica\n137          6.3         3.4          5.6         2.4  virginica\n138          6.4         3.1          5.5         1.8  virginica\n139          6.0         3.0          4.8         1.8  virginica\n140          6.9         3.1          5.4         2.1  virginica\n141          6.7         3.1          5.6         2.4  virginica\n142          6.9         3.1          5.1         2.3  virginica\n143          5.8         2.7          5.1         1.9  virginica",
        "\n144          6.8         3.2          5.9         2.3  virginica\n145          6.7         3.3          5.7         2.5  virginica\n146          6.7         3.0          5.2         2.3  virginica\n147          6.3         2.5          5.0         1.9  virginica\n148          6.5         3.0          5.2         2.0  virginica\n149          6.2         3.4          5.4         2.3  virginica\n150          5.9         3.0          5.1         1.8  virginica\n",
        "> ",
        ".is(Sepal.Length,list(NULL))",
        "  Sepal.Length\n1         NULL\n",
        "> ",
        "cond=cbind(.within(Petal.Width,list(c(0.2,0.3))),.is(as.factor(Species),1))",
        "> ",
        "cond",
        "         Petal.Width as.factor(Species)\n1 %within%, 0.2, 0.3              ==, 1\n",
        "> ",
        "cond[1,1]",
        "$Petal.Width\n$Petal.Width[[1]]\n[1] \"%within%\"\n\n$Petal.Width[[2]]\n[1] 0.2 0.3\n\n\n",
        "> ",
        "cond[\"Petal.Width\"]",
        "         Petal.Width\n1 %within%, 0.2, 0.3\n",
        "> ",
        "cond[\"Petal.Width\"][1]",
        "         Petal.Width\n1 %within%, 0.2, 0.3\n",
        "> ",
        "cond[1,\"Petal.Width\"]",
        "$Petal.Width\n$Petal.Width[[1]]\n[1] \"%within%\"\n\n$Petal.Width[[2]]\n[1] 0.2 0.3\n\n\n",
        "> ",
        "cond[1,\"Petal.Width\"][[1]]",
        "[[1]]\n[1] \"%within%\"\n\n[[2]]\n[1] 0.2 0.3\n\n",
        "> ",
        "cond[[\"Petal.Width\"]]",
        "$Petal.Width\n$Petal.Width[[1]]\n[1] \"%within%\"\n\n$Petal.Width[[2]]\n[1] 0.2 0.3\n\n\n",
        "> ",
        "cond[[\"Petal.Width\"]][[1]]",
        "[[1]]\n[1] \"%within%\"\n\n[[2]]\n[1] 0.2 0.3\n\n",
        "> ",
        "cond$Petal.Width",
        "$Petal.Width\n$Petal.Width[[1]]\n[1] \"%within%\"\n\n$Petal.Width[[2]]\n[1] 0.2 0.3\n\n\n",
        "> ",
        "cond$Petal.Width[[1]]",
        "[[1]]\n[1] \"%within%\"\n\n[[2]]\n[1] 0.2 0.3\n\n",
        "> ",
        "cond$Petal.Width[[1]][[1]]",
        "[1] \"%within%\"\n",
        "> ",
        "cond[[1]][[1]]",
        "[[1]]\n[1] \"%within%\"\n\n[[2]]\n[1] 0.2 0.3\n\n",
        "> ",
        "cond[[1]][[1]][[1]]",
        "[1] \"%within%\"\n",
        "> ",
        "cond[[1,1]][[1]][[1]]",
        "[1] \"%within%\"\n",
        "> ",
        "cond[[1,1]][[1]]",
        "[1] \"%within%\"\n",
        "> ",
        "cond[[1,1]]",
        "[[1]]\n[1] \"%within%\"\n\n[[2]]\n[1] 0.2 0.3\n\n",
        "> ",
        "cond[1,1]",
        "$Petal.Width\n$Petal.Width[[1]]\n[1] \"%within%\"\n\n$Petal.Width[[2]]\n[1] 0.2 0.3\n\n\n",
        "> ",
        "cond[[1,1]]",
        "[[1]]\n[1] \"%within%\"\n\n[[2]]\n[1] 0.2 0.3\n\n",
        "> ",
        "cond[[1,1]][[1]]",
        "[1] \"%within%\"\n",
        "> ",
        "do.call(cond[[1,1]][[1]],substitute(names(cond[1]),iris))",
        "Error in do.call(cond[[1, 1]][[1]], substitute(names(cond[1]), iris)) : \n  second argument must be a list\n",
        "> ",
        "names(cond[1])",
        "[1] \"Petal.Width\"\n",
        "> ",
        "substitute(names(cond[1]),iris))",
        "Error: unexpected ')' in \"substitute(names(cond[1]),iris))\"\n",
        "> ",
        "substitute(expression(names(cond[1])),iris)",
        "expression(names(cond[1]))\n",
        "> ",
        "substitute(as.expression(names(cond[1])),iris)",
        "as.expression(names(cond[1]))\n",
        "> ",
        "substitute(as.call(names(cond[1])),iris)",
        "as.call(names(cond[1]))\n",
        "> ",
        "eval(as.call(names(cond[1])),iris)",
        "Error in as.call(names(cond[1])) : invalid argument list\n",
        "> ",
        "as.call(names(cond[1]))",
        "Error in as.call(names(cond[1])) : invalid argument list\n",
        "> ",
        "as.call(names(cond[1])",
        "+ ",
        ")",
        "Error in as.call(names(cond[1])) : invalid argument list\n",
        "> ",
        "w=as.call(names(cond[1]))",
        "Error in as.call(names(cond[1])) : invalid argument list\n",
        "> ",
        "w=as.expression(names(cond[1]))",
        "> ",
        "w",
        "expression(\"Petal.Width\")\n",
        "> ",
        "w=as.name(names(cond[1]))",
        "<simpleError in doTryCatch(return(expr), name, parentenv, handler): object 'Petal.Width' not found>\n<simpleError in is.scalar(val): object 'Petal.Width' not found>\n<simpleError in is(obj, \"ore.frame\"): object 'Petal.Width' not found>\n",
        "> ",
        "w",
        "Petal.Width\n",
        "> ",
        "w",
        "Petal.Width\n",
        "> ",
        "w",
        "Petal.Width\n",
        "> ",
        "eval(w,iris)",
        "  [1] 0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 0.2 0.2 0.1 0.1 0.2 0.4 0.4 0.3 0.3 0.3 0.2 0.4 0.2 0.5 0.2 0.2 0.4 0.2 0.2 0.2 0.2\n [32] 0.4 0.1 0.2 0.2 0.2 0.2 0.1 0.2 0.2 0.3 0.3 0.2 0.6 0.4 0.3 0.2 0.2 0.2 0.2 1.4 1.5 1.5 1.3 1.5 1.3 1.6 1.0 1.3 1.4 1.0 1.5\n [63] 1.0 1.4 1.3 1.4 1.5 1.0 1.5 1.1 1.8 1.3 1.5 1.2 1.3 1.4 1.4 1.7 1.5 1.0 1.1 1.0 1.2 1.6 1.5 1.6 1.5 1.3 1.3 1.3 1.2 1.4 1.2\n [94] 1.0 1.3 1.2 1.3 1.3 1.1 1.3 2.5 1.9 2.1 1.8 2.2 2.1 1.7 1.8 1.8 2.5 2.0 1.9 2.1 2.0 2.4 2.3 1.8 2.2 2.3 1.5 2.3 2.0 2.0",
        " 1.8\n[125] 2.1 1.8 1.8 1.8 2.1 1.6 1.9 2.0 2.2 1.5 1.4 2.3 2.4 1.8 1.8 2.1 2.4 2.3 1.9 2.3 2.5 2.3 1.9 2.0 2.3 1.8\n",
        "> ",
        "w=as.name(names(cond[2]))",
        "<simpleError in doTryCatch(return(expr), name, parentenv, handler): object 'as.factor(Species)' not found>\n<simpleError in is.scalar(val): object 'as.factor(Species)' not found>\n<simpleError in is(obj, \"ore.frame\"): object 'as.factor(Species)' not found>\n",
        "> ",
        "w",
        "`as.factor(Species)`\n",
        "> ",
        "eval(w,iris)",
        "Error in eval(expr, envir, enclos) : \n  object 'as.factor(Species)' not found\n",
        "> ",
        "w=as.name(names(cond[[2]]))",
        "> ",
        "w",
        "`as.factor(Species)`\n",
        "> ",
        "eval(w,iris)",
        "Error in eval(expr, envir, enclos) : \n  object 'as.factor(Species)' not found\n",
        "> ",
        "w=names(cond[[2]])",
        "> ",
        "w",
        "[1] \"as.factor(Species)\"\n",
        "> ",
        "as.expression(w)",
        "expression(\"as.factor(Species)\")\n",
        "> ",
        "quote(w)",
        "w\n",
        "> ",
        "w=parse(names(cond[[2]]))",
        "Error in file(filename, \"r\") : cannot open the connection\n",
        "In addition: ",
        "Warning message:\n",
        "In file(filename, \"r\") :\n  cannot open file 'as.factor(Species)': No such file or directory\n",
        "> ",
        "w",
        "[1] \"as.factor(Species)\"\n",
        "> ",
        "w=parse(names(cond[[2]]))",
        "Error in file(filename, \"r\") : cannot open the connection\n",
        "In addition: ",
        "Warning message:\n",
        "In file(filename, \"r\") :\n  cannot open file 'as.factor(Species)': No such file or directory\n",
        "> ",
        "w=parse(names(cond[2]))",
        "Error in file(filename, \"r\") : cannot open the connection\n",
        "In addition: ",
        "Warning message:\n",
        "In file(filename, \"r\") :\n  cannot open file 'as.factor(Species)': No such file or directory\n",
        "> ",
        "eval(parse(names(cond[2])),iris)",
        "Error in file(filename, \"r\") : cannot open the connection\n",
        "In addition: ",
        "Warning message:\n",
        "In file(filename, \"r\") :\n  cannot open file 'as.factor(Species)': No such file or directory\n",
        "> ",
        "eval(parse(text=names(cond[2])),iris)",
        "  [1] setosa     setosa     setosa     setosa     setosa     setosa     setosa     setosa     setosa     setosa     setosa    \n [12] setosa     setosa     setosa     setosa     setosa     setosa     setosa     setosa     setosa     setosa     setosa    \n [23] setosa     setosa     setosa     setosa     setosa     setosa     setosa     setosa     setosa     setosa     setosa    \n [34] setosa     setosa     setosa     setosa     setosa     setosa     setosa     setosa     setosa     setosa     setosa    \n [45]",
        " setosa     setosa     setosa     setosa     setosa     setosa     versicolor versicolor versicolor versicolor versicolor\n [56] versicolor versicolor versicolor versicolor versicolor versicolor versicolor versicolor versicolor versicolor versicolor\n [67] versicolor versicolor versicolor versicolor versicolor versicolor versicolor versicolor versicolor versicolor versicolor\n [78] versicolor versicolor versicolor versicolor versicolor versicolor versicolor versicolor versicolor versicolor versicolor\n [89] versicolor",
        " versicolor versicolor versicolor versicolor versicolor versicolor versicolor versicolor versicolor versicolor\n[100] versicolor virginica  virginica  virginica  virginica  virginica  virginica  virginica  virginica  virginica  virginica \n[111] virginica  virginica  virginica  virginica  virginica  virginica  virginica  virginica  virginica  virginica  virginica \n[122] virginica  virginica  virginica  virginica  virginica  virginica  virginica  virginica  virginica  virginica  virginica \n[133] virginica  virginica ",
        " virginica  virginica  virginica  virginica  virginica  virginica  virginica  virginica  virginica \n[144] virginica  virginica  virginica  virginica  virginica  virginica  virginica \nLevels: setosa versicolor virginica\n",
        "> ",
        "eval(parse(text=names(cond[1])),iris)",
        "  [1] 0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 0.2 0.2 0.1 0.1 0.2 0.4 0.4 0.3 0.3 0.3 0.2 0.4 0.2 0.5 0.2 0.2 0.4 0.2 0.2 0.2 0.2\n [32] 0.4 0.1 0.2 0.2 0.2 0.2 0.1 0.2 0.2 0.3 0.3 0.2 0.6 0.4 0.3 0.2 0.2 0.2 0.2 1.4 1.5 1.5 1.3 1.5 1.3 1.6 1.0 1.3 1.4 1.0 1.5\n [63] 1.0 1.4 1.3 1.4 1.5 1.0 1.5 1.1 1.8 1.3 1.5 1.2 1.3 1.4 1.4 1.7 1.5 1.0 1.1 1.0 1.2 1.6 1.5 1.6 1.5 1.3 1.3 1.3 1.2 1.4 1.2\n [94] 1.0 1.3 1.2 1.3 1.3 1.1 1.3 2.5 1.9 2.1 1.8 2.2 2.1 1.7 1.8 1.8 2.5 2.0 1.9 2.1 2.0 2.4 2.3 1.8 2.2 2.3 1.5 2.3 2.0 2.0",
        " 1.8\n[125] 2.1 1.8 1.8 1.8 2.1 1.6 1.9 2.0 2.2 1.5 1.4 2.3 2.4 1.8 1.8 2.1 2.4 2.3 1.9 2.3 2.5 2.3 1.9 2.0 2.3 1.8\n",
        "> ",
        "do.call(cond[[1,1]][[1]],eval(parse(text=names(cond[1])),iris)",
        "+ ",
        ")",
        "Error in do.call(cond[[1, 1]][[1]], eval(parse(text = names(cond[1])),  : \n  second argument must be a list\n",
        "> ",
        "cond[[1,1]][[1]]",
        "[1] \"%within%\"\n",
        "> ",
        "cond[[1,1]][[2]]",
        "[1] 0.2 0.3\n",
        "> ",
        "do.call(cond[[1,1]][[1]],eval(parse(text=names(cond[1])),iris),cond[[1,1]][[2]])",
        "Error in do.call(cond[[1, 1]][[1]], eval(parse(text = names(cond[1])),  : \n  second argument must be a list\n",
        "> ",
        "do.call(cond[[1,1]][[1]],list(eval(parse(text=names(cond[1])),iris),cond[[1,1]][[2]]))",
        "  [1]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE  TRUE\n [21]  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n [41]  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [81] FALSE",
        " FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[101] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[121] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[141] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n",
        "> ",
        "cond",
        "         Petal.Width as.factor(Species)\n1 %within%, 0.2, 0.3              ==, 1\n",
        "> ",
        "cond2=cbind(cond,.is(Sepal.Length,list(NULL)))",
        "> ",
        "cond2",
        "         Petal.Width as.factor(Species) Sepal.Length\n1 %within%, 0.2, 0.3              ==, 1         NULL\n",
        "> ",
        "cond2=cond2[3]",
        "> ",
        "cond2",
        "  Sepal.Length\n1         NULL\n",
        "> ",
        "do.call(cond2[[1,1]][[1]],list(eval(parse(text=names(cond2[1])),iris),cond2[[1,1]][[2]]))",
        "Error in do.call(cond2[[1, 1]][[1]], list(eval(parse(text = names(cond2[1])),  : \n  'what' must be a character string or a function\n",
        "> ",
        "values=cond[[1,1]][[2]]",
        "> ",
        "values",
        "[1] 0.2 0.3\n",
        "> ",
        "values=cond[[1,1]][[2]]",
        "> ",
        "values=cond2[[1,1]][[2]]",
        "> ",
        "values2",
        "Error: object 'values2' not found\n",
        "> ",
        "values",
        "NULL\n",
        "> ",
        "?and",
        "No documentation for ‘and’ in specified packages and libraries:\nyou could try ‘??and’\n",
        "> ",
        "?AND",
        "No documentation for ‘AND’ in specified packages and libraries:\nyou could try ‘??AND’\n",
        "> ",
        "?$",
        "Error: unexpected '$' in \"?$\"\n",
        "> ",
        "?&",
        "Error: unexpected '&' in \"?&\"\n",
        "> ",
        "??&",
        "Error: unexpected '&' in \"??&\"\n",
        "> ",
        "x <- c(NA, FALSE, TRUE)",
        "> ",
        "names(x) <- as.character(x)",
        "> ",
        "outer(x, x, \"&\")",
        "       <NA> FALSE  TRUE\n<NA>     NA FALSE    NA\nFALSE FALSE FALSE FALSE\nTRUE     NA FALSE  TRUE\n",
        "> ",
        "x&x",
        " <NA> FALSE  TRUE \n   NA FALSE  TRUE \n",
        "> ",
        "x&rep(T,0)",
        "logical(0)\n",
        "> ",
        "Reduce_operator(&)(c(T,T),(T,F),c(T,T))",
        "Error: unexpected '&' in \"Reduce_operator(&\"\n",
        "> ",
        "fun=Reduce_operator(&)",
        "Error: unexpected '&' in \"fun=Reduce_operator(&\"\n",
        "> ",
        "fun=Reduce_operator(\"&\")",
        "Error: could not find function \"Reduce_operator\"\n",
        "> ",
        "library(\"recurs\", lib.loc=\"C:/Users/cbonini/Documents/R/win-library/3.0\")",
        "> ",
        "Reduce_operator(&)(c(T,T),(T,F),c(T,T))",
        "Error: unexpected '&' in \"Reduce_operator(&\"\n",
        "> ",
        "fun=Reduce_operator(\"&\")",
        "> ",
        "fun(c(T,T),(T,F),c(T,T))",
        "Error: unexpected ',' in \"fun(c(T,T),(T,\"\n",
        "> ",
        "fun(c(T,T),c(T,F),c(T,T))",
        "[1]  TRUE FALSE\n",
        "> ",
        "fun(c(T,T),c(T,F),c(F,T))",
        "[1] FALSE FALSE\n",
        "> ",
        "Reduce_operator(&)(c(T,T),c(T,F),c(T,T))",
        "Error: unexpected '&' in \"Reduce_operator(&\"\n",
        "> ",
        "Reduce_operator(\"&\")(c(T,T),c(T,F),c(T,T))",
        "[1]  TRUE FALSE\n",
        "> ",
        "cond",
        "         Petal.Width as.factor(Species)\n1 %within%, 0.2, 0.3              ==, 1\n",
        "> ",
        "cond=as.list(cond)",
        "> ",
        "cond",
        "$Petal.Width\n$Petal.Width$Petal.Width\n$Petal.Width$Petal.Width[[1]]\n[1] \"%within%\"\n\n$Petal.Width$Petal.Width[[2]]\n[1] 0.2 0.3\n\n\n\n$`as.factor(Species)`\n$`as.factor(Species)`$`as.factor(Species)`\n$`as.factor(Species)`$`as.factor(Species)`[[1]]\n[1] \"==\"\n\n$`as.factor(Species)`$`as.factor(Species)`[[2]]\n[1] 1\n\n\n\n",
        "> ",
        "cond[[1]]",
        "$Petal.Width\n$Petal.Width[[1]]\n[1] \"%within%\"\n\n$Petal.Width[[2]]\n[1] 0.2 0.3\n\n\n",
        "> ",
        "cond1=cond[[1]]",
        "> ",
        "cond=cond1",
        "> ",
        "operator=cond[[1,1]][[1]]",
        "Error in cond[[1, 1]] : incorrect number of subscripts\n",
        "> ",
        "cond=cbind(.within(Petal.Width,list(c(0.2,0.3))),.is(as.factor(Species),1))",
        "> ",
        "cond=as.list(cond)[[1]]",
        "> ",
        "cond",
        "$Petal.Width\n$Petal.Width[[1]]\n[1] \"%within%\"\n\n$Petal.Width[[2]]\n[1] 0.2 0.3\n\n\n",
        "> ",
        "cond[[1]]",
        "[[1]]\n[1] \"%within%\"\n\n[[2]]\n[1] 0.2 0.3\n\n",
        "> ",
        "cond[[1]][[1]]",
        "[1] \"%within%\"\n",
        "> ",
        "names(cond)",
        "[1] \"Petal.Width\"\n",
        "> ",
        "cond[1][[1]]",
        "[[1]]\n[1] \"%within%\"\n\n[[2]]\n[1] 0.2 0.3\n\n",
        "> ",
        "cond[[1]][1]",
        "[[1]]\n[1] \"%within%\"\n\n",
        "> ",
        "operator=cond[[1]][[1]]",
        "> ",
        "values=cond[[1]][[2]]",
        "> ",
        "operator",
        "[1] \"%within%\"\n",
        "> ",
        "values",
        "[1] 0.2 0.3\n",
        "> ",
        "find.index=function(data,cond){",
        "+ ",
        "  operator=cond[[1]][[1]]",
        "+ ",
        "  values=cond[[1]][[2]]",
        "+ ",
        "  expr=names(cond[1])",
        "+ ",
        "  if(is.null(values)) return(rep(TRUE,nrow(data)))",
        "+ ",
        "  do.call(operator,list(eval(parse(text=expr),data),values))",
        "+ ",
        "}",
        "> ",
        "find.index(iris,cond)",
        "  [1]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE  TRUE\n [21]  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n [41]  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [81] FALSE",
        " FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[101] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[121] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[141] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n",
        "> ",
        "subset3=function(data,cond){",
        "+ ",
        "  cond=as.list(cond)",
        "+ ",
        "  idxs=lapply(cond,find.index,data=data)",
        "+ ",
        "  idx=do.call(Reduce_operator(\"&\"),idxs)",
        "+ ",
        "  data[idx,]",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "find.index=function(cond,data){",
        "+ ",
        "  cond=as.list(cond)",
        "+ ",
        "  operator=cond[[1]][[1]]",
        "+ ",
        "  values=cond[[1]][[2]]",
        "+ ",
        "  expr=names(cond[1])",
        "+ ",
        "  if(is.null(values)) return(rep(TRUE,nrow(data)))",
        "+ ",
        "  do.call(operator,list(eval(parse(text=expr),data),values))",
        "+ ",
        "}",
        "> ",
        "cond=cbind(.within(Petal.Width,list(c(0.2,0.3))),.is(as.factor(Species),1))",
        "> ",
        "subset3(iris,cond)",
        "[1] Sepal.Length Sepal.Width  Petal.Length Petal.Width  Species     \n<0 rows> (or 0-length row.names)\n",
        "> ",
        "cond",
        "         Petal.Width as.factor(Species)\n1 %within%, 0.2, 0.3              ==, 1\n",
        "> ",
        "data=iris",
        "> ",
        "cond=as.list(cond)",
        "> ",
        "idxs=lapply(cond,find.index,data=data)",
        "> ",
        "idxs",
        "$Petal.Width\n  [1]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE  TRUE\n [21]  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n [41]  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE",
        "\n [81] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[101] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[121] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[141] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n$`as.factor(Species)`\n  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE",
        " FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [21] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [41] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [81] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE",
        " FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[101] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[121] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[141] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n",
        "> ",
        "idx=do.call(Reduce_operator(\"&\"),idxs)",
        "> ",
        "idx",
        "  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [21] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [41] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [81] FALSE",
        " FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[101] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[121] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[141] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n",
        "> ",
        "find.index(as.list(cond)[[2]],data)",
        "  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [21] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [41] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [81] FALSE",
        " FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[101] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[121] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[141] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n",
        "> ",
        "cond=as.list(cond)[[2]]",
        "> ",
        "cond",
        "$`as.factor(Species)`\n$`as.factor(Species)`[[1]]\n[1] \"==\"\n\n$`as.factor(Species)`[[2]]\n[1] 1\n\n\n",
        "> ",
        "cond=as.list(cond)",
        "> ",
        "operator=cond[[1]][[1]]",
        "> ",
        "values=cond[[1]][[2]]",
        "> ",
        "expr=names(cond[1])",
        "> ",
        "expr",
        "[1] \"as.factor(Species)\"\n",
        "> ",
        "values=cond[[1]][[2]]",
        "> ",
        "operator=cond[[1]][[1]]",
        "> ",
        "values",
        "[1] 1\n",
        "> ",
        "operator",
        "[1] \"==\"\n",
        "> ",
        "do.call(operator,list(eval(parse(text=expr),data),values))",
        "  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [21] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [41] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [81] FALSE",
        " FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[101] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[121] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[141] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n",
        "> ",
        "subset(irirs,as.factor(Species)==1)",
        "Error in subset(irirs, as.factor(Species) == 1) : \n  object 'irirs' not found\n",
        "> ",
        "subset(iris,as.factor(Species)==1)",
        "[1] Sepal.Length Sepal.Width  Petal.Length Petal.Width  Species     \n<0 rows> (or 0-length row.names)\n",
        "> ",
        "subset(iris,as.numeric(as.factor(Species))==1)",
        "   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1           5.1         3.5          1.4         0.2  setosa\n2           4.9         3.0          1.4         0.2  setosa\n3           4.7         3.2          1.3         0.2  setosa\n4           4.6         3.1          1.5         0.2  setosa\n5           5.0         3.6          1.4         0.2  setosa\n6           5.4         3.9          1.7         0.4  setosa\n7           4.6         3.4          1.4         0.3  setosa\n8           5.0         3.4",
        "          1.5         0.2  setosa\n9           4.4         2.9          1.4         0.2  setosa\n10          4.9         3.1          1.5         0.1  setosa\n11          5.4         3.7          1.5         0.2  setosa\n12          4.8         3.4          1.6         0.2  setosa\n13          4.8         3.0          1.4         0.1  setosa\n14          4.3         3.0          1.1         0.1  setosa\n15          5.8         4.0          1.2         0.2  setosa\n16          5.7         4.4          1.5         0.4",
        "  setosa\n17          5.4         3.9          1.3         0.4  setosa\n18          5.1         3.5          1.4         0.3  setosa\n19          5.7         3.8          1.7         0.3  setosa\n20          5.1         3.8          1.5         0.3  setosa\n21          5.4         3.4          1.7         0.2  setosa\n22          5.1         3.7          1.5         0.4  setosa\n23          4.6         3.6          1.0         0.2  setosa\n24          5.1         3.3          1.7         0.5  setosa\n25          4.8",
        "         3.4          1.9         0.2  setosa\n26          5.0         3.0          1.6         0.2  setosa\n27          5.0         3.4          1.6         0.4  setosa\n28          5.2         3.5          1.5         0.2  setosa\n29          5.2         3.4          1.4         0.2  setosa\n30          4.7         3.2          1.6         0.2  setosa\n31          4.8         3.1          1.6         0.2  setosa\n32          5.4         3.4          1.5         0.4  setosa\n33          5.2         4.1          1.5",
        "         0.1  setosa\n34          5.5         4.2          1.4         0.2  setosa\n35          4.9         3.1          1.5         0.2  setosa\n36          5.0         3.2          1.2         0.2  setosa\n37          5.5         3.5          1.3         0.2  setosa\n38          4.9         3.6          1.4         0.1  setosa\n39          4.4         3.0          1.3         0.2  setosa\n40          5.1         3.4          1.5         0.2  setosa\n41          5.0         3.5          1.3         0.3  setosa\n42          4.5",
        "         2.3          1.3         0.3  setosa\n43          4.4         3.2          1.3         0.2  setosa\n44          5.0         3.5          1.6         0.6  setosa\n45          5.1         3.8          1.9         0.4  setosa\n46          4.8         3.0          1.4         0.3  setosa\n47          5.1         3.8          1.6         0.2  setosa\n48          4.6         3.2          1.4         0.2  setosa\n49          5.3         3.7          1.5         0.2  setosa\n50          5.0         3.3          1.4",
        "         0.2  setosa\n",
        "> ",
        "cond=cbind(.within(Petal.Width,list(c(0.2,0.3))),.is(as.numeric(as.factor(Species)),1))",
        "> ",
        "cond",
        "         Petal.Width as.numeric(as.factor(Species))\n1 %within%, 0.2, 0.3                          ==, 1\n",
        "> ",
        "subset3(iris,cond)",
        "   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1           5.1         3.5          1.4         0.2  setosa\n2           4.9         3.0          1.4         0.2  setosa\n3           4.7         3.2          1.3         0.2  setosa\n4           4.6         3.1          1.5         0.2  setosa\n5           5.0         3.6          1.4         0.2  setosa\n7           4.6         3.4          1.4         0.3  setosa\n8           5.0         3.4          1.5         0.2  setosa\n9           4.4         2.9",
        "          1.4         0.2  setosa\n11          5.4         3.7          1.5         0.2  setosa\n12          4.8         3.4          1.6         0.2  setosa\n15          5.8         4.0          1.2         0.2  setosa\n18          5.1         3.5          1.4         0.3  setosa\n19          5.7         3.8          1.7         0.3  setosa\n20          5.1         3.8          1.5         0.3  setosa\n21          5.4         3.4          1.7         0.2  setosa\n23          4.6         3.6          1.0         0.2",
        "  setosa\n25          4.8         3.4          1.9         0.2  setosa\n26          5.0         3.0          1.6         0.2  setosa\n28          5.2         3.5          1.5         0.2  setosa\n29          5.2         3.4          1.4         0.2  setosa\n30          4.7         3.2          1.6         0.2  setosa\n31          4.8         3.1          1.6         0.2  setosa\n34          5.5         4.2          1.4         0.2  setosa\n35          4.9         3.1          1.5         0.2  setosa\n36          5.0",
        "         3.2          1.2         0.2  setosa\n37          5.5         3.5          1.3         0.2  setosa\n39          4.4         3.0          1.3         0.2  setosa\n40          5.1         3.4          1.5         0.2  setosa\n41          5.0         3.5          1.3         0.3  setosa\n42          4.5         2.3          1.3         0.3  setosa\n43          4.4         3.2          1.3         0.2  setosa\n46          4.8         3.0          1.4         0.3  setosa\n47          5.1         3.8          1.6",
        "         0.2  setosa\n48          4.6         3.2          1.4         0.2  setosa\n49          5.3         3.7          1.5         0.2  setosa\n50          5.0         3.3          1.4         0.2  setosa\n",
        "> ",
        "iris",
        "    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1            5.1         3.5          1.4         0.2     setosa\n2            4.9         3.0          1.4         0.2     setosa\n3            4.7         3.2          1.3         0.2     setosa\n4            4.6         3.1          1.5         0.2     setosa\n5            5.0         3.6          1.4         0.2     setosa\n6            5.4         3.9          1.7         0.4     setosa\n7            4.6         3.4          1.4         0.3     setosa",
        "\n8            5.0         3.4          1.5         0.2     setosa\n9            4.4         2.9          1.4         0.2     setosa\n10           4.9         3.1          1.5         0.1     setosa\n11           5.4         3.7          1.5         0.2     setosa\n12           4.8         3.4          1.6         0.2     setosa\n13           4.8         3.0          1.4         0.1     setosa\n14           4.3         3.0          1.1         0.1     setosa\n15           5.8         4.0          1.2         0.2     setosa",
        "\n16           5.7         4.4          1.5         0.4     setosa\n17           5.4         3.9          1.3         0.4     setosa\n18           5.1         3.5          1.4         0.3     setosa\n19           5.7         3.8          1.7         0.3     setosa\n20           5.1         3.8          1.5         0.3     setosa\n21           5.4         3.4          1.7         0.2     setosa\n22           5.1         3.7          1.5         0.4     setosa\n23           4.6         3.6          1.0         0.2     setosa",
        "\n24           5.1         3.3          1.7         0.5     setosa\n25           4.8         3.4          1.9         0.2     setosa\n26           5.0         3.0          1.6         0.2     setosa\n27           5.0         3.4          1.6         0.4     setosa\n28           5.2         3.5          1.5         0.2     setosa\n29           5.2         3.4          1.4         0.2     setosa\n30           4.7         3.2          1.6         0.2     setosa\n31           4.8         3.1          1.6         0.2     setosa",
        "\n32           5.4         3.4          1.5         0.4     setosa\n33           5.2         4.1          1.5         0.1     setosa\n34           5.5         4.2          1.4         0.2     setosa\n35           4.9         3.1          1.5         0.2     setosa\n36           5.0         3.2          1.2         0.2     setosa\n37           5.5         3.5          1.3         0.2     setosa\n38           4.9         3.6          1.4         0.1     setosa\n39           4.4         3.0          1.3         0.2     setosa",
        "\n40           5.1         3.4          1.5         0.2     setosa\n41           5.0         3.5          1.3         0.3     setosa\n42           4.5         2.3          1.3         0.3     setosa\n43           4.4         3.2          1.3         0.2     setosa\n44           5.0         3.5          1.6         0.6     setosa\n45           5.1         3.8          1.9         0.4     setosa\n46           4.8         3.0          1.4         0.3     setosa\n47           5.1         3.8          1.6         0.2     setosa",
        "\n48           4.6         3.2          1.4         0.2     setosa\n49           5.3         3.7          1.5         0.2     setosa\n50           5.0         3.3          1.4         0.2     setosa\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor",
        "\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n58           4.9         2.4          3.3         1.0 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n61           5.0         2.0          3.5         1.0 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor",
        "\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor",
        "\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor",
        "\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor",
        "\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n94           5.0         2.3          3.3         1.0 versicolor\n95           5.6         2.7          4.2         1.3 versicolor",
        "\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n101          6.3         3.3          6.0         2.5  virginica\n102          5.8         2.7          5.1         1.9  virginica\n103          7.1         3.0          5.9         2.1  virginica",
        "\n104          6.3         2.9          5.6         1.8  virginica\n105          6.5         3.0          5.8         2.2  virginica\n106          7.6         3.0          6.6         2.1  virginica\n107          4.9         2.5          4.5         1.7  virginica\n108          7.3         2.9          6.3         1.8  virginica\n109          6.7         2.5          5.8         1.8  virginica\n110          7.2         3.6          6.1         2.5  virginica\n111          6.5         3.2          5.1         2.0  virginica",
        "\n112          6.4         2.7          5.3         1.9  virginica\n113          6.8         3.0          5.5         2.1  virginica\n114          5.7         2.5          5.0         2.0  virginica\n115          5.8         2.8          5.1         2.4  virginica\n116          6.4         3.2          5.3         2.3  virginica\n117          6.5         3.0          5.5         1.8  virginica\n118          7.7         3.8          6.7         2.2  virginica\n119          7.7         2.6          6.9         2.3  virginica",
        "\n120          6.0         2.2          5.0         1.5  virginica\n121          6.9         3.2          5.7         2.3  virginica\n122          5.6         2.8          4.9         2.0  virginica\n123          7.7         2.8          6.7         2.0  virginica\n124          6.3         2.7          4.9         1.8  virginica\n125          6.7         3.3          5.7         2.1  virginica\n126          7.2         3.2          6.0         1.8  virginica\n127          6.2         2.8          4.8         1.8  virginica",
        "\n128          6.1         3.0          4.9         1.8  virginica\n129          6.4         2.8          5.6         2.1  virginica\n130          7.2         3.0          5.8         1.6  virginica\n131          7.4         2.8          6.1         1.9  virginica\n132          7.9         3.8          6.4         2.0  virginica\n133          6.4         2.8          5.6         2.2  virginica\n134          6.3         2.8          5.1         1.5  virginica\n135          6.1         2.6          5.6         1.4  virginica",
        "\n136          7.7         3.0          6.1         2.3  virginica\n137          6.3         3.4          5.6         2.4  virginica\n138          6.4         3.1          5.5         1.8  virginica\n139          6.0         3.0          4.8         1.8  virginica\n140          6.9         3.1          5.4         2.1  virginica\n141          6.7         3.1          5.6         2.4  virginica\n142          6.9         3.1          5.1         2.3  virginica\n143          5.8         2.7          5.1         1.9  virginica",
        "\n144          6.8         3.2          5.9         2.3  virginica\n145          6.7         3.3          5.7         2.5  virginica\n146          6.7         3.0          5.2         2.3  virginica\n147          6.3         2.5          5.0         1.9  virginica\n148          6.5         3.0          5.2         2.0  virginica\n149          6.2         3.4          5.4         2.3  virginica\n150          5.9         3.0          5.1         1.8  virginica\n",
        "> ",
        "cond1=cbind(cond,.is(Group,\"flower\"))",
        "> ",
        "cond1",
        "         Petal.Width as.numeric(as.factor(Species))      Group\n1 %within%, 0.2, 0.3                          ==, 1 ==, flower\n",
        "> ",
        "subset3(iris,cond1)",
        "Error in eval(expr, envir, enclos) : object 'Group' not found\n",
        "> ",
        "eval(parse(text=\"Group\"),iris)",
        "Error in eval(expr, envir, enclos) : object 'Group' not found\n",
        "> ",
        "eval(parse(text=\"Group\"),iris)tryCatch(stop(\"fred\"), finally = print(\"Hello\"))",
        "Error: unexpected symbol in \"eval(parse(text=\"Group\"),iris)tryCatch\"\n",
        "> ",
        "tryCatch(stop(\"fred\"), finally = print(\"Hello\"))",
        "Error in tryCatchList(expr, classes, parentenv, handlers) : fred\n",
        "[1] \"Hello\"\n",
        "> ",
        "tryCatch(stop(\"fred\"), finally = print(\"Hello\"),silent=T)",
        "Error in doTryCatch(return(expr), name, parentenv, handler) : fred\n",
        "[1] \"Hello\"\n",
        "> ",
        "tryCatch(stop(\"fred\"),  error = function(e) e, finally = print(\"Hello\"))",
        "[1] \"Hello\"\n<simpleError in doTryCatch(return(expr), name, parentenv, handler): fred>\n",
        "> ",
        "tryCatch(1+1,  error = function(e) e, finally = print(\"Hello\"))",
        "[1] \"Hello\"\n[1] 2\n",
        "> ",
        "tryCatch(1+1,  error = function(e) e)",
        "[1] 2\n",
        "> ",
        "w=tryCatch(1+1,  error = function(e) e)",
        "> ",
        "w",
        "[1] 2\n",
        "> ",
        "w=tryCatch(1+1,  error = function(e) seq(1:10))",
        "> ",
        "w",
        "[1] 2\n",
        "> ",
        "w=tryCatch(stop('we'),  error = function(e) seq(1:10))",
        "> ",
        "w",
        " [1]  1  2  3  4  5  6  7  8  9 10\n",
        "> ",
        "source('~/.active-rstudio-document', echo=TRUE)",
        "\n> #' @title A function to subset non interactively on several arguments using condition data.frames\n> #' @description Subset on several arguments with .... [TRUNCATED] \n\n> find.index=function(cond,data){\n+   cond=as.list(cond)\n+   operator=cond[[1]][[1]]\n+   values=cond[[1]][[2]]\n+   expr=names(cond[1])\n+   #f(is.null( .... [TRUNCATED] \n\n> #' @title A function to subset non interactively on several arguments\n> #' @description Subset on several arguments with a logical AND\n> #' @param d .... [TRUNCATED] \n\n> #' @title A function to subset interactively on several arguments\n> #' @description Subset on several arguments with a logical AND\n> #' @param data\n",
        " .... [TRUNCATED] \n",
        "> ",
        "subset3(iris,cond1)",
        "Error in tryCatch(do.call(operator, list(eval(parse(text = expr), data),  : \n  bad handler specification\n",
        "> ",
        "cond1",
        "         Petal.Width as.numeric(as.factor(Species))      Group\n1 %within%, 0.2, 0.3                          ==, 1 ==, flower\n",
        "> ",
        "find.index=function(cond,data){",
        "+ ",
        "  cond=as.list(cond)",
        "+ ",
        "  operator=cond[[1]][[1]]",
        "+ ",
        "  values=cond[[1]][[2]]",
        "+ ",
        "  expr=names(cond[1])",
        "+ ",
        "  #f(is.null(values)) return()",
        "+ ",
        "  tryCatch(do.call(operator,list(eval(parse(text=expr),data),values)),",
        "+ ",
        "           error = function(e) rep(TRUE,nrow(data)))",
        "+ ",
        "}",
        "> ",
        "subset3(iris,cond1)",
        "   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1           5.1         3.5          1.4         0.2  setosa\n2           4.9         3.0          1.4         0.2  setosa\n3           4.7         3.2          1.3         0.2  setosa\n4           4.6         3.1          1.5         0.2  setosa\n5           5.0         3.6          1.4         0.2  setosa\n7           4.6         3.4          1.4         0.3  setosa\n8           5.0         3.4          1.5         0.2  setosa\n9           4.4         2.9",
        "          1.4         0.2  setosa\n11          5.4         3.7          1.5         0.2  setosa\n12          4.8         3.4          1.6         0.2  setosa\n15          5.8         4.0          1.2         0.2  setosa\n18          5.1         3.5          1.4         0.3  setosa\n19          5.7         3.8          1.7         0.3  setosa\n20          5.1         3.8          1.5         0.3  setosa\n21          5.4         3.4          1.7         0.2  setosa\n23          4.6         3.6          1.0         0.2",
        "  setosa\n25          4.8         3.4          1.9         0.2  setosa\n26          5.0         3.0          1.6         0.2  setosa\n28          5.2         3.5          1.5         0.2  setosa\n29          5.2         3.4          1.4         0.2  setosa\n30          4.7         3.2          1.6         0.2  setosa\n31          4.8         3.1          1.6         0.2  setosa\n34          5.5         4.2          1.4         0.2  setosa\n35          4.9         3.1          1.5         0.2  setosa\n36          5.0",
        "         3.2          1.2         0.2  setosa\n37          5.5         3.5          1.3         0.2  setosa\n39          4.4         3.0          1.3         0.2  setosa\n40          5.1         3.4          1.5         0.2  setosa\n41          5.0         3.5          1.3         0.3  setosa\n42          4.5         2.3          1.3         0.3  setosa\n43          4.4         3.2          1.3         0.2  setosa\n46          4.8         3.0          1.4         0.3  setosa\n47          5.1         3.8          1.6",
        "         0.2  setosa\n48          4.6         3.2          1.4         0.2  setosa\n49          5.3         3.7          1.5         0.2  setosa\n50          5.0         3.3          1.4         0.2  setosa\n",
        "> ",
        "cond2=cbind(cond,.is(Sepal.Length,list(NULL)))",
        "> ",
        "subset3(iris,cond2)",
        "   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1           5.1         3.5          1.4         0.2  setosa\n2           4.9         3.0          1.4         0.2  setosa\n3           4.7         3.2          1.3         0.2  setosa\n4           4.6         3.1          1.5         0.2  setosa\n5           5.0         3.6          1.4         0.2  setosa\n7           4.6         3.4          1.4         0.3  setosa\n8           5.0         3.4          1.5         0.2  setosa\n9           4.4         2.9",
        "          1.4         0.2  setosa\n11          5.4         3.7          1.5         0.2  setosa\n12          4.8         3.4          1.6         0.2  setosa\n15          5.8         4.0          1.2         0.2  setosa\n18          5.1         3.5          1.4         0.3  setosa\n19          5.7         3.8          1.7         0.3  setosa\n20          5.1         3.8          1.5         0.3  setosa\n21          5.4         3.4          1.7         0.2  setosa\n23          4.6         3.6          1.0         0.2",
        "  setosa\n25          4.8         3.4          1.9         0.2  setosa\n26          5.0         3.0          1.6         0.2  setosa\n28          5.2         3.5          1.5         0.2  setosa\n29          5.2         3.4          1.4         0.2  setosa\n30          4.7         3.2          1.6         0.2  setosa\n31          4.8         3.1          1.6         0.2  setosa\n34          5.5         4.2          1.4         0.2  setosa\n35          4.9         3.1          1.5         0.2  setosa\n36          5.0",
        "         3.2          1.2         0.2  setosa\n37          5.5         3.5          1.3         0.2  setosa\n39          4.4         3.0          1.3         0.2  setosa\n40          5.1         3.4          1.5         0.2  setosa\n41          5.0         3.5          1.3         0.3  setosa\n42          4.5         2.3          1.3         0.3  setosa\n43          4.4         3.2          1.3         0.2  setosa\n46          4.8         3.0          1.4         0.3  setosa\n47          5.1         3.8          1.6",
        "         0.2  setosa\n48          4.6         3.2          1.4         0.2  setosa\n49          5.3         3.7          1.5         0.2  setosa\n50          5.0         3.3          1.4         0.2  setosa\n",
        "> ",
        "find.index=function(cond,data){",
        "+ ",
        "  cond=as.list(cond)",
        "+ ",
        "  operator=cond[[1]][[1]]",
        "+ ",
        "  values=cond[[1]][[2]]",
        "+ ",
        "  expr=names(cond[1])",
        "+ ",
        "  #f(is.null(values)) return()",
        "+ ",
        "  return(do.call(operator,list(eval(parse(text=expr),data),values)))",
        "+ ",
        "  tryCatch(do.call(operator,list(eval(parse(text=expr),data),values)),",
        "+ ",
        "           error = function(e) rep(TRUE,nrow(data)))",
        "+ ",
        "}",
        "> ",
        "subset3(iris,cond2)",
        "Error in do.call(operator, list(eval(parse(text = expr), data), values)) : \n  'what' must be a character string or a function\n",
        "> ",
        "conc2",
        "Error: object 'conc2' not found\n",
        "> ",
        "cond2",
        "         Petal.Width as.numeric(as.factor(Species)) Sepal.Length\n1 %within%, 0.2, 0.3                          ==, 1         NULL\n",
        "> ",
        "a=we==45",
        "Error: object 'we' not found\n",
        "> ",
        "subset3i=function(data,...){",
        "+ ",
        "  args=substitute(list(...))",
        "+ ",
        "  return(args)",
        "+ ",
        "  args.new=lapply(args,function(arg){",
        "+ ",
        "    arg=as.list(arg)",
        "+ ",
        "    list(eval(arg[[1]]),eval(arg[[3]]))",
        "+ ",
        "  })",
        "+ ",
        "  names(args.new)=lapply(args,function(arg)deparse(arg[[2]]))",
        "+ ",
        "  do.call(subset2,c(list(data=data),args.new))",
        "+ ",
        "}",
        "> ",
        "subset3i(mtcars,cyl%in%c(4,6),am==1,vs==0)",
        "list(cyl %in% c(4, 6), am == 1, vs == 0)\n",
        "> ",
        "a=subset3i(mtcars,cyl%in%c(4,6),am==1,vs==0)",
        "> ",
        "a",
        "list(cyl %in% c(4, 6), am == 1, vs == 0)\n",
        "> ",
        "a[[1]]",
        "list\n",
        "> ",
        "a[[2]]",
        "cyl %in% c(4, 6)\n",
        "> ",
        "a[[3]]",
        "am == 1\n",
        "> ",
        "a[[4]]",
        "vs == 0\n",
        "> ",
        "w=a[[4]]",
        "> ",
        "subset3i=function(data,...){",
        "+ ",
        "  args=substitute(...)",
        "+ ",
        "  return(args)",
        "+ ",
        "  args.new=lapply(args,function(arg){",
        "+ ",
        "    arg=as.list(arg)",
        "+ ",
        "    list(eval(arg[[1]]),eval(arg[[3]]))",
        "+ ",
        "  })",
        "+ ",
        "  names(args.new)=lapply(args,function(arg)deparse(arg[[2]]))",
        "+ ",
        "  do.call(subset2,c(list(data=data),args.new))",
        "+ ",
        "}",
        "> ",
        "a=subset3i(mtcars,cyl%in%c(4,6),am==1,vs==0)",
        "> ",
        "a",
        "cyl %in% c(4, 6)\n",
        "> ",
        "a",
        "cyl %in% c(4, 6)\n",
        "> ",
        "subset3i=function(data,...){",
        "+ ",
        "  args=list(...)",
        "+ ",
        "  return(args)",
        "+ ",
        "  args.new=lapply(args,function(arg){",
        "+ ",
        "    arg=as.list(arg)",
        "+ ",
        "    list(eval(arg[[1]]),eval(arg[[3]]))",
        "+ ",
        "  })",
        "+ ",
        "  names(args.new)=lapply(args,function(arg)deparse(arg[[2]]))",
        "+ ",
        "  do.call(subset2,c(list(data=data),args.new))",
        "+ ",
        "}",
        "> ",
        "a=subset3i(mtcars,cyl%in%c(4,6),am==1,vs==0)",
        "Error in match(x, table, nomatch = 0L) : object 'cyl' not found\n",
        "> ",
        "subset3i=function(data,...){",
        "+ ",
        "  args=quote(list(...))",
        "+ ",
        "  return(args)",
        "+ ",
        "  args.new=lapply(args,function(arg){",
        "+ ",
        "    arg=as.list(arg)",
        "+ ",
        "    list(eval(arg[[1]]),eval(arg[[3]]))",
        "+ ",
        "  })",
        "+ ",
        "  names(args.new)=lapply(args,function(arg)deparse(arg[[2]]))",
        "+ ",
        "  do.call(subset2,c(list(data=data),args.new))",
        "+ ",
        "}",
        "> ",
        "a=subset3i(mtcars,cyl%in%c(4,6),am==1,vs==0)",
        "> ",
        "a",
        "list(...)\n",
        "> ",
        "subset3i=function(data,...){",
        "+ ",
        "  args=subtitute(list(...))",
        "+ ",
        "  return(args)",
        "+ ",
        "  args.new=lapply(args,function(arg){",
        "+ ",
        "    arg=as.list(arg)",
        "+ ",
        "    list(eval(arg[[1]]),eval(arg[[3]]))",
        "+ ",
        "  })",
        "+ ",
        "  names(args.new)=lapply(args,function(arg)deparse(arg[[2]]))",
        "+ ",
        "  do.call(subset2,c(list(data=data),args.new))",
        "+ ",
        "}",
        "> ",
        "a=subset3i(mtcars,cyl%in%c(4,6),am==1,vs==0)",
        "Error in subset3i(mtcars, cyl %in% c(4, 6), am == 1, vs == 0) : \n  could not find function \"subtitute\"\n",
        "> ",
        "subset3i=function(data,...){",
        "+ ",
        "  args=substitute(list(...))",
        "+ ",
        "  return(args)",
        "+ ",
        "  args.new=lapply(args,function(arg){",
        "+ ",
        "    arg=as.list(arg)",
        "+ ",
        "    list(eval(arg[[1]]),eval(arg[[3]]))",
        "+ ",
        "  })",
        "+ ",
        "  names(args.new)=lapply(args,function(arg)deparse(arg[[2]]))",
        "+ ",
        "  do.call(subset2,c(list(data=data),args.new))",
        "+ ",
        "}",
        "> ",
        "a=subset3i(mtcars,cyl%in%c(4,6),am==1,vs==0)",
        "> ",
        "a",
        "list(cyl %in% c(4, 6), am == 1, vs == 0)\n",
        "> ",
        "a[[1]]",
        "list\n",
        "> ",
        "a[-1]",
        "(cyl %in% c(4, 6))(am == 1, vs == 0)\n",
        "> ",
        "a[1]",
        "list()\n",
        "> ",
        "a[0]",
        "NULL\n",
        "> ",
        "a[2]",
        "(cyl %in% c(4, 6))()\n",
        "> ",
        "a[3]",
        "(am == 1)()\n",
        "> ",
        "a[4]",
        "(vs == 0)()\n",
        "> ",
        "a[[4]]",
        "vs == 0\n",
        "> ",
        "eval(a[[4]],data)",
        "Error in eval(expr, envir, enclos) : object 'vs' not found\n",
        "> ",
        "eval(a[[4]],mtcars)",
        " [1]  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE\n[22]  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE\n",
        "> ",
        "as.list(a)",
        "[[1]]\nlist\n\n[[2]]\ncyl %in% c(4, 6)\n\n[[3]]\nam == 1\n\n[[4]]\nvs == 0\n\n",
        "> ",
        "as.list(a)[-1]",
        "[[1]]\ncyl %in% c(4, 6)\n\n[[2]]\nam == 1\n\n[[3]]\nvs == 0\n\n",
        "> ",
        "w=as.list(a)[-1]",
        "> ",
        "w",
        "[[1]]\ncyl %in% c(4, 6)\n\n[[2]]\nam == 1\n\n[[3]]\nvs == 0\n\n",
        "> ",
        "w[[1]]",
        "cyl %in% c(4, 6)\n",
        "> ",
        "class(w[[1]])",
        "[1] \"call\"\n",
        "> ",
        "mode(w[[1]])",
        "[1] \"call\"\n",
        "> ",
        "typeof(w[[1]])",
        "[1] \"language\"\n",
        "> ",
        "find.index=function(call,data){",
        "+ ",
        "  tryCatch(eval(call,data),error = function(e) rep(TRUE,nrow(data)))",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "subset3.base=function(data,call.list){",
        "+ ",
        "  idxs=lapply(call.list,find.index,data=data)",
        "+ ",
        "  idx=do.call(Reduce_operator(\"&\"),idxs)",
        "+ ",
        "  data[idx,]",
        "+ ",
        "}",
        "> ",
        "w",
        "[[1]]\ncyl %in% c(4, 6)\n\n[[2]]\nam == 1\n\n[[3]]\nvs == 0\n\n",
        "> ",
        "subset3.base(mtcars,w)",
        "               mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4     21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag 21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nPorsche 914-2 26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nFerrari Dino  19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\n",
        "> ",
        "subset3i=function(data,...){",
        "+ ",
        "  exprs=as.list(substitute(list(...)))[-1]",
        "+ ",
        "  subset3.base(data,exprs)",
        "+ ",
        "}",
        "\nRestarting R session...\n\n"
    ],
    "type" : [
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        2,
        0,
        1,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ]
}